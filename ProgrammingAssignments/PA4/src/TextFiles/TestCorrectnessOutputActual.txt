****************** Dynamic Programming ******************

Number of  1-length binary strings with no consecutive ones is    2
Number of  2-length binary strings with no consecutive ones is    3
Number of  3-length binary strings with no consecutive ones is    5
Number of  4-length binary strings with no consecutive ones is    8
Number of  5-length binary strings with no consecutive ones is   13
Number of  6-length binary strings with no consecutive ones is   21
Number of  7-length binary strings with no consecutive ones is   34
Number of  8-length binary strings with no consecutive ones is   55
Number of  9-length binary strings with no consecutive ones is   89
Number of 10-length binary strings with no consecutive ones is  144
Number of 11-length binary strings with no consecutive ones is  233
Number of 12-length binary strings with no consecutive ones is  377
Number of 13-length binary strings with no consecutive ones is  610
Number of 14-length binary strings with no consecutive ones is  987
Number of 15-length binary strings with no consecutive ones is 1597

A Longest Increasing Subsequence of [10, 22, 9, 33, 21, 50, 41, 60, 55, 57] is [22, 33, 50, 55, 57]
A Longest Increasing Subsequence of [10, 22, 9, 33, 21, 50, 41, 60, 7] is [22, 33, 50, 60]
A Longest Increasing Subsequence of [-1, 2, 0, 4, 8, 5, 7, 10, 3] is [2, 4, 5, 7, 10]
A Longest Increasing Subsequence of [-30, 10, -20, 0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15] is [-20, 0, 4, 6, 9, 13, 15]

****************** Bellman-Ford ******************

*** Graph 1 ***

Distances from v0: [0, 2, 7, 4, -2]
Distances from v1: [-2, 0, 5, 2, -4]
Distances from v2: [-7, -5, 0, -3, -9]
Distances from v3: [-4, -2, 3, 0, -6]
Distances from v4: [2, 4, 9, 6, 0]

*** Graph 2 ***

Has a negative cycle.

*** Graph 3 ***

Distances from v0: [0, inf, inf, inf, inf, inf]
Distances from v1: [-1, 0, inf, inf, inf, inf]
Distances from v2: [0, 1, 0, inf, inf, inf]
Distances from v3: [-10, -9, -10, 0, inf, inf]
Distances from v4: [-15, -14, -15, -5, 0, inf]
Distances from v5: [-16, -15, -16, -6, -1, 0]

****************** Dijkstra ******************

*** Graph 1 ***

Distance array (from v0): [0, 10, 10, 3, 5, inf, 10]
Distance array (from v1): [17, 0, 0, 5, 7, inf, 12]
Distance array (from v2): [17, 27, 0, 20, 22, inf, 27]
Distance array (from v3): [34, 44, 17, 0, 2, inf, 7]
Distance array (from v4): [inf, inf, inf, inf, 0, inf, inf]
Distance array (from v5): [inf, inf, inf, inf, 3, 0, 2]
Distance array (from v6): [inf, inf, inf, inf, inf, inf, 0]

*** Graph 2 ***

Distance array (from v0): [0, 10, 10, 12, 1, 8, 19]
Distance array (from v1): [5, 0, 0, 2, 6, 11, 9]
Distance array (from v2): [5, 15, 0, 2, 6, 11, 9]
Distance array (from v3): [3, 13, 13, 0, 4, 9, 7]
Distance array (from v4): [inf, inf, inf, inf, 0, 7, inf]
Distance array (from v5): [inf, inf, inf, inf, inf, 0, inf]
Distance array (from v6): [inf, inf, inf, inf, inf, 2, 0]

****************** APSP algorithms ******************

*** Graph 1 Distance Matrix (using Johnson) ***

[0, 2, 7, 4, -2]
[-2, 0, 5, 2, -4]
[-7, -5, 0, -3, -9]
[-4, -2, 3, 0, -6]
[2, 4, 9, 6, 0]

*** Graph 1 Distance Matrix (using Floyd-Warshall) ***

[0, 2, 7, 4, -2]
[-2, 0, 5, 2, -4]
[-7, -5, 0, -3, -9]
[-4, -2, 3, 0, -6]
[2, 4, 9, 6, 0]

*** Graph 2 Distance Matrix (using Johnson) ***

[0, -1, -1, 8, -2, 0]
[12, 0, 0, 15, 5, 7]
[12, 6, 0, 15, 5, 7]
[-3, -9, -9, 0, -10, -8]
[7, 6, 6, 15, 0, 7]
[5, 4, 4, 13, -2, 0]

*** Graph 2 Distance Matrix (using Floyd-Warshall) ***

[0, -1, -1, 8, -2, 0]
[12, 0, 0, 15, 5, 7]
[12, 6, 0, 15, 5, 7]
[-3, -9, -9, 0, -10, -8]
[7, 6, 6, 15, 0, 7]
[5, 4, 4, 13, -2, 0]

*** Graph 3 ***

Has a negative cycle.
